name: Build

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: fib-finder-gui-linux
            archive_ext: tar.gz
          - os: macos-latest
            artifact_name: fib-finder-gui-macos
            archive_ext: tar.gz
          - os: windows-latest
            artifact_name: fib-finder-gui-windows
            archive_ext: zip
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry and build
        uses: Swatinem/rust-cache@v2

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev pkg-config

      - name: Build
        run: cargo build --release

      - name: Package artifacts (Unix)
        if: matrix.os != 'windows-latest'
        run: tar -C target/release -czf ${{ matrix.artifact_name }}.${{ matrix.archive_ext }} fib-finder-gui

      - name: Package artifacts (Windows)
        if: matrix.os == 'windows-latest'
        run: Compress-Archive -Path target\release\fib-finder-gui.exe -DestinationPath ${{ matrix.artifact_name }}.${{ matrix.archive_ext }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}.${{ matrix.archive_ext }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
